ed by [2]) inside of the of the second element of the list (accessed by [[2]]).

When we print a list, this structure and the double-bracket syntax is reflected in the output.

Named Lists, Lists within Lists
Like vectors, lists can be named—associated with a character vector of equal length—using the names() function. We can use an index vector of names to extract a sublist, and we can use [[]] syntax to extract individual elements by name.

We can even extract elements from a list if the name of the element we want is stored in another variable, using the [[]] syntax.

As fun as this double-bracket syntax is, because extracting elements from a list by name is a common operation, there is a shortcut using $ syntax.

In fact, if the name doesn’t contain any special characters (spaces, etc.), then the quotation marks can be left off.

This shortcut is widely used and convenient, but, because the quotes are implied, we can’t use $ syntax to extract an element by name if that name is stored in an intermediary variable. For example, if extract_name <- "ecotypes", then athal$extract_name will expand to athal[["extract_name"]], and we won’t get the ecotypes vector. This common error reflects a misunderstanding of the syntactic sugar employed by R. Similarly, the $ syntax won’t work for names like "# Chromosomes" because that name contains a space and a special character (for this reason, names of list elements are often simplified).
Frequently, $ syntax is combined with vector synt